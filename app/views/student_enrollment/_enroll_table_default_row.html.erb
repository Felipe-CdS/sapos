<%
  readonly = closed || (
    !semester.main_enroll_open? &&
    !semester.adjust_enroll_remove_open? &&
    cer.present?
  )

  check_box_options = {
    data: { row: row_index },
    class: row[0][:on_demand] ?
      "on_demand_check" : "class_enrollment_check",
    id: "table_row_#{row_index}",
    multiple: true,
    skip_default_ids: false,
    onclick: (readonly ?  "return false;" : ""),
    readonly: readonly
  }

  options = {
    labelid: row[0][:id],
    row_index: row_index,
    form: form
  }

  label_options = options.merge(
    tdclass: "cell-#{table[:header][0][1].downcase}"
  )
%>

<tr <%= cer_tr_class(cer, count) %>>
  <% if enrollment_request.persisted? %>
    <%= enroll_table_td(options) do %>
      <%= cer_row_status(cer) %>
    <% end %>
  <% end %>
  <%= enroll_table_td(options.merge(labelclass: "check-label")) do %>
    <%= form.check_box :course_class_ids, check_box_options, row[0][:id], "" %>
  <% end %>
  <%= enroll_table_td(label_options) do %>
    <%= row[1].empty? ? "&nbsp; ".html_safe : row[1] %>
    <% if ! cer.nil? && ! cer.errors.empty? %>
      <details>
        <summary><%= t(
          "student_enrollment.enroll.class_errors",
          count: cer.errors.full_messages.count
        ) %> </summary>
        <ul>
          <% cer.errors.full_messages.each do |message| %>
            <li> <%= message %> </li>
          <% end %>
        </ul>
      </details>
    <% end %>
  <% end %>
  <% row.drop(2).each_with_index do |cell, index| %>
    <%
      day_options = options.merge(
        tdclass: "cell-#{table[:header][0][index + 2].downcase}"
      )
    %>
    <%= enroll_table_td(day_options) do %>
      <%= (cell.empty? ? "&nbsp; " : cell.strip.sub("\n", "<br/>")).html_safe %>
    <% end %>
  <% end %>
</tr>
