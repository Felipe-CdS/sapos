
<%
  scope = field.object_name["record".size..]
  column = Admissions::FilledFormFieldsController.active_scaffold_config.columns[:file]
  options = active_scaffold_input_options(column, scope, :object => field.object)
  options[:required] = configuration["required"] ? true : false
  file_id = "file_#{SecureRandom.random_number(1_000_000)}"
  options[:class] = filled_class
%>
<li class="form-element <%= configuration["required"] ? "required" : "" %>">
  <dl>
    <dt>
      <%= field.label :file, form_field.name, for: options[:id] %>
      <% if form_field.description.present? %>
        <span class="filled-form-description"><%= form_field.description %></span>
      <% end %>
    </dt>
    <dd id="<%= file_id %>"><%= active_scaffold_input_carrierwave_fix(column, options) %>
    </dd>
  </dl>
</li>

<script>
  $(document).ready(function() {
    $(`#<%= file_id %> .carrierwave_controls input`).addClass("<%= filled_class %>");

    function validateFile(file) {
      if (!file) {
        return "";
      }
      if (file.size > 15 * 1024 * 1024) {
        return `<%= form_field.name %> <%= I18n.t(
          "activerecord.errors.models.admissions/filled_form_field.filesize",
          count: 15) %>`
      }
      <% if configuration["values"] %>
        <%
          extensions = configuration["values"]
        %>
        let filename = file.name.toLowerCase();
        let extensions = <%= raw extensions.to_json %>;
        if (!extensions.some((ext) => filename.endsWith(ext.toLowerCase()))) {
          return `<%= form_field.name %> <%= I18n.t(
            "activerecord.errors.models.admissions/filled_form_field.extension",
            valid: configuration["values"].join(', ')) %>`
        }
      <% end %>
      return "" ;
    }

    window.customFormValidations["<%= filled_class %>"].push(function() {
      let input = $(`#<%= file_id %> input[type="file"]`).get(0)
      if (input.disabled) {
        return true;
      }
      error_msg = validateFile(input.files[0]);
      input.setCustomValidity(error_msg);
      if (error_msg != "") {
        input.reportValidity()
        return false;
      }
      return true;
    })

  });
</script>