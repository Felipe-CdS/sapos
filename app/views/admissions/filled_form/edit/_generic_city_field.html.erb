<%
  scope = field.object_name["record".size..]
  column = Admissions::FilledFormFieldsController.active_scaffold_config.columns[:value]
  options = active_scaffold_input_options(column, scope, :object => field.object)

  city_options = {size: 15, class: "text-input city-field"}
  city_options[:required] = "required" if configuration["required"]
  state_options = {size: 15, class: "text-input city-field"}
  state_options[:required] = "required" if configuration["state_required"]
  country_options = {size: 15, class: "text-input city-field"}
  country_options[:required] = "required" if configuration["country_required"]
  values = (field.object.value || "").split(" <$> ")
  (3 - values.length).times { values << "" }
%>
<li class="form-element <%= configuration["required"] ? "required" : "" %>">
  <dl>
    <dt>
      <%= field.label :value, form_field.name %>
      <% if form_field.description.present? %>
        <span class="filled-form-description"><%= form_field.description %></span>
      <% end %>
    </dt>
    <dd id="<%= options[:id] %>">
      <%= field.hidden_field :value, class: "hidden" %>
      <%= text_field_tag :city, values[0], placeholder: I18n.t(
        "activerecord.attributes.admissions/form_field.field_types.city_fields.city"
      ), **city_options %>
      <%= text_field_tag :state, values[1], placeholder: I18n.t(
        "activerecord.attributes.admissions/form_field.field_types.city_fields.state"
      ), **state_options %>
      <%= text_field_tag :country, values[2], placeholder: I18n.t(
        "activerecord.attributes.admissions/form_field.field_types.city_fields.country"
      ), **country_options %>
    </dd>
  </dl>
</li>

<script>

$(document).ready(function() {
  $(`#<%= options[:id] %> .city-field`).on("change", function() {
    let value = $(`#<%= options[:id] %> .city-field`)
      .map((i, el) => $(el).val()).toArray()
      .join(" <$> ")
    $(`#<%= options[:id] %> .hidden`).val(value)
  })
})

</script>
