<%
  scope = field.object_name["record".size..]
  filled_field_mode = :file
  column = Admissions::FilledFormFieldsController.active_scaffold_config.columns[:file]
  options = active_scaffold_input_options(column, scope, :object => field.object)
  options[:required] = configuration["required"] ? true : false
  basename = options[:name][..-("file".size + 3)]
  data_url = field.object.file.file.present? ? "#{request.base_url}#{field.object.file.url}" : ""
  file_id = "file_#{SecureRandom.random_number(1_000_000)}"
%>

<li class="form-element <%= configuration["required"] ? "required" : "" %>">
  <dl>
    <dt>
      <%= field.label :value, form_field.name %>
      <% if form_field.description.present? %>
        <span class="filled-form-description"><%= form_field.description %></span>
      <% end %>
    </dt>
    <dd id="<%= file_id %>">
      <div class="webcam-photo" data-id="<%= options[:id] %>"
         data-url="<%= data_url %>" data-basename="<%= basename %>"
         data-column="file" data-remove-label="Remover foto"
      >
        <%= active_scaffold_input_carrierwave(column, options) %>
      </div>
    </dd>
  </dl>
</li>

<script>
$(document).ready(function() {
  carrierwave_webcam(".webcam-photo")

  window.customFormValidations.push(function() {
    let input = $(`#<%= file_id %> input[type="file"]`).get(0)
    if (input.files[0] && (input.files[0].size > 15 * 1024 * 1024)) {
        input.setCustomValidity(`<%= form_field.name %> <%= I18n.t(
          "activerecord.errors.models.admissions/filled_form_field.filesize",
          count: 15) %>`)
        input.reportValidity()
        return false;
    } else {
      input.setCustomValidity("");
    }
    return true;
  })
});
</script>
