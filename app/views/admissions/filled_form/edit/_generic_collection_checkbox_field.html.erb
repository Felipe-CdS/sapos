<%
  collection_id = "select_#{SecureRandom.random_number(1_000_000)}"
  default_values = form_field.get_values_map("default_values")
  original_value = form_field.get_values_map("values")
  values = original_value.merge(default_values).merge(original_value)
  values = values.map { |k, v| [v, k] }
%>
<li id="<%= collection_id %>"
    class="form-element <%= configuration["required"] ? "required" : "" %>">
  <dl>
    <dt>
      <%= field.label :list, form_field.name %>
      <% if form_field.description.present? %>
        <span class="filled-form-description"><%= form_field.description %></span>
      <% end %>
    </dt>
    <dd>
      <%= field.collection_check_boxes :list, values, :last, :first do |b| %>
        <div class="form-template-checkbox-list <%= "vertical-style" if configuration["vertical_layout"].present? %>">
          <%= b.label do %>
            <%= b.check_box %> <%= b.text %>
          <% end %>
        </div>
      <% end %>
    </dd>
  </dl>
</li>

<% if configuration["maxselection"].to_i > 0 %>
  <script>
  $(document).ready(function() {
    let check_count = function() {
      var checkboxes = $('#<%= collection_id %> input:checkbox:checked');
      if (checkboxes.length >= <%= configuration["maxselection"].to_i %>) {
        $('#<%= collection_id %> input:checkbox:not(:checked)').attr("disabled", true);
      }
      else{
        $('#<%= collection_id %> input:checkbox').attr("disabled", false);
      }
      let input = $("#<%= collection_id %> input").get(1)
      input.setCustomValidity("");
    }

    $("#<%= collection_id %> input:checkbox").change(check_count)
    check_count();

    <% if configuration["minselection"].to_i >= 1 %>
      window.customFormValidations.push(function() {
        let checkboxes = $('#<%= collection_id %> input:checkbox:checked');
        let input = $("#<%= collection_id %> input").get(1)
        if (checkboxes.length < <%= configuration["minselection"].to_i %>) {
            input.setCustomValidity(`<%= form_field.name %> <%= I18n.t(
              "activerecord.errors.models.admissions/filled_form_field.minselection",
              count: configuration["minselection"].to_i) %>`)
            input.reportValidity()
            return false;
        } else {
          input.setCustomValidity("");
        }
        return true;
      })
    <% end %>
  })
  </script>
<% end %>