<% 
   method ||= :patch
   form_action ||= :update
   scope ||= nil
   footer_extension ||= nil
   show_unauthorized_columns = active_scaffold_config.send(form_action).show_unauthorized_columns if active_scaffold_config.actions.include? form_action
   url_options ||= params_for(:action => form_action)
   xhr = request.xhr? if xhr.nil?
   if active_scaffold_config.actions.include? form_action
     action_config = active_scaffold_config.send(form_action)
     multipart ||= action_config.multipart? unless local_assigns.has_key? :multipart
     columns ||= action_config.columns unless local_assigns.has_key? :columns
     persistent ||= action_config.persistent unless local_assigns.has_key? :persistent
   else
     multipart ||= false
     columns ||= nil
     persistent ||= false
   end
   cancel_link = true if cancel_link.nil?
   submit_text ||= form_action
   apply_text ||= :"#{form_action}_apply"
   body_partial ||= 'form'
   form_id = element_form_id(action: form_action, id: @record&.id)
%>
<%=
options = {:id => form_id,
           :multipart => multipart,
           :class => "as_form #{form_action.to_s}",
           :method => method,
           'data-loading' => defined?(loading) ? loading : true}
cancel_options = {:class => 'as_cancel'}

cancel_options[:remote] = true if xhr #cancel link does nt have to care about multipart forms
if xhr && multipart # file_uploads
  form_remote_upload_tag url_options.merge({:iframe => true}), options
else
  options[:remote] = true if xhr && !multipart
  form_tag url_options, options
end
-%>


<h4><%= active_scaffold_config.show.label(@record.to_label.nil? ? nil : h(@record.to_label)) %></h4>

<div id="<%= element_messages_id(:action => form_action) %>" class="messages-container">
  <% unless xhr %>
    <p class="error-message message server-error" style="display:none;">
      <%= as_(:internal_error).html_safe %>
      <a href="#" class="close" title="<%= as_(:close).html_safe %>"><%= as_(:close).html_safe %></a>
    </p>
  <% end %>
  <%= render :partial => 'form_messages' %>
</div>

<ol class="form">
  <%= content_tag :li, class: ["required", "form-element", "select"] do %>
    <dl>
      <dt>
        <label for="record_status_<%= @record.id %>"><%= t 'activerecord.attributes.enrollment_request.status' %>
      </dt>
      <dd>
        <select name="record[status]" class="status-input" id="record_status_<%= @record.id %>" required="required">
          <option value><%= t("active_scaffold._select_") %></option>
          <% ClassEnrollmentRequest::STATUSES.each do |status| %>
            <option value="<%= status %>"<%= status == @record.status ? 'selected="selected"' : ""%>><%= status %></option>
          <% end %>
        </select>
      </dd>
    </dl>
  <% end %>
  <% cer_subform_id = sub_form_id(association: :class_enrollment_requests) %>
  <%= content_tag :li, class: ["sub-form-enroll"], id: cer_subform_id do %>
    <h5> <%= t 'activerecord.attributes.enrollment_request.class_enrollment_requests' %> 
    <a data-show="Show Block" data-hide="Ocultar" data-toggable="<%= cer_subform_id %>-div" style="" class="as-js-button visibility-toggle" href="#">Ocultar</a>
    </h5>
    <div id="<%= cer_subform_id %>-div">
      <input type="hidden" name="record[class_enrollment_requests][0]" value="">
      <% table = prepare_class_schedule_table(@record.class_enrollment_requests.collect(&:course_class)) %>
      <table class="enroll-table <%= sub_form_list_id(association: :class_enrollment_requests) %>">
        <thead>
          <tr>
            <% ClassEnrollmentRequest::STATUSES.each do |status| %>
              <th> <%= status %> </th>
            <% end %>
            <% table[:header][0].drop(1).each do |head| %>
              <th class="cell-<%= head.downcase %>"> <%= head %> </th>
            <% end %>
          </tr>
        </thead>
        <tbody>
          <% table[:data].each do |row| %>
            <tr> 
              <% cer = @record.class_enrollment_requests.find_by(course_class_id: row[0]) %>
              <input type="hidden" name="record[class_enrollment_requests][<%=cer.id%>][id]" value="<%=cer.id%>">
              <input type="hidden" name="record[class_enrollment_requests][<%=cer.id%>][course_class]" value="<%=cer.course_class_id%>">
              <input type="hidden" name="record[class_enrollment_requests][<%=cer.id%>][class_enrollment]" value="<%=cer.class_enrollment_id%>">
              <% ClassEnrollmentRequest::STATUSES.each do |status| %>
                <td> <input type="radio" value="<%= status %>"
                            <%= status == cer.status ? 'checked="checked"' : ""%> 
                            <%= [cer.status, status].include?(ClassEnrollmentRequest::EFFECTED) ? 'readonly' : "" %> 
                            name="record[class_enrollment_requests][<%=cer.id%>][status]"/> </td>
              <% end %>
              <% row.drop(1).each_with_index do |cell, index| %>
                <td class="cell-<%= table[:header][0][index + 1].downcase %>">
                  <label> <%= cell %> </label>
                </td>
              <% end %>
      
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% end %>


<p class="form-footer">
    <%= submit_tag as_(submit_text), :class => "submit" if !persistent || persistent == :optional %>
    <%= submit_tag as_(apply_text), :class => "submit", :name => 'dont_close' if persistent %>
    <%= link_to(as_(:cancel), main_path_to_return, cancel_options) if cancel_link %>
    <%= loading_indicator_tag(action: form_action, id: @record&.id) %>
    <%= render :partial => footer_extension, :locals => { :form_action => form_action } if footer_extension %>
  </p>

<script>
$(':radio[readonly]:not(:checked)').attr('disabled', true);
</script>